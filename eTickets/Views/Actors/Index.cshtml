@model IEnumerable<Actor>

@{
	ViewData["Title"] = "List of Actors";
}

<style>
	.circular--portrait{
		position: relative;
		width: 150px;
		height: 150px;
		overflow: hidden;
		border-radius: 50%;
	}
	
	.circular--portrait img {
		width: 100%;
		height: auto;
	}
</style>

<div class="row">
	<div class="col-md-8 offset-md-2">

		<table class="table">
			<thead>
				<tr class="text-center">
					<th>@Html.DisplayNameFor(model => model.ProfilePictureURL)</th>
					<th>@Html.DisplayNameFor(model => model.FullName)</th>
					<th>@Html.DisplayNameFor(model => model.Bio)</th>
					@if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
					{
						<th>Actions</th>
					}				
				</tr>
			</thead>
			<tbody>
				@foreach (var item in Model)
				{
					<tr>
						<td class="align-middle">
							<div class="circular--portrait">
								<img class="rounded-circle" src="@item.ProfilePictureURL" alt="@item.FullName" style="max-width: 150px" />
							</div>
						</td>
						<td class="align-middle">
							@Html.DisplayFor(modelItem => item.FullName)
						</td>
						<td class="align-middle">
							@Html.DisplayFor(modelItem => item.Bio)
						</td>
						@if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
						{
							<td class="align-middle">
								<a class="btn btn-outline-primary" asp-action="Edit" asp-route-id="@item.Id"><i class="bi bi-pencil-square"></i>Edit</a>
								<a class="btn btn-outline-info" asp-action="Details" asp-route-id="@item.Id"><i class="bi bi-eye"></i>Details</a>
								<a class="btn btn-danger text-white" asp-action="Delete" asp-route-id="@item.Id"><i class="bi bi-trash"></i>Delete</a>
							</td>
						}
						
					</tr>
				}
			</tbody>
		</table>

	</div>
</div>

@await Html.PartialAsync("_CreateItem", "Actors")
